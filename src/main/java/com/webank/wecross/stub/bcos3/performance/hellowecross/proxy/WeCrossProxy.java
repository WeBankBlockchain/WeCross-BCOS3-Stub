package com.webank.wecross.stub.bcos3.performance.hellowecross.proxy;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.DynamicBytes;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple6;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class WeCrossProxy extends Contract {
    public static final String[] BINARY_ARRAY = {
        "",
        "60008090505b848110156112b8576000610fc08983815181101515610fb157fe5b906020019060200201516169e3565b9050808483815181101515610fd157fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156111c757888281518110151561106f57fe5b906020019060200201516000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040516020018083805190602001908083835b6020831015156110f257805182526020820191506020810190506020830392506110cd565b6001836020036101000a0380198251168184511680821785525050505050509050018061a8ac60299139602901828054600181600116156101000203166002900480156111765780601f10611154576101008083540402835291820191611176565b820191906000526020600020905b815481529060010190602001808311611162575b5050925050506040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be919061a4f1565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550896000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906112769291906194ab565b50888281518110151561128557fe5b90602001906020020151838381518110151561129d57fe5b90602001906020020181905250508080600101915050610f96565b5060008090505b838110156113095786818151811015156112d557fe5b90602001906020020151828287018151811015156112ef57fe5b9060200190602002018190525080806001019150506112bf565b50606061040060405190808252806020026020018201604052801561133d5781602001602082028038833980820191505090505b50905061012060405190810160405280611356326164e8565b81526020018381526020018481526020016040805190810160405280600a81526020017f70726f63657373696e670000000000000000000000000000000000000000000081525081526020016103e8428115156113af57fe5b0481526020016000815260200160008152602001828152602001600081525060018a6040518082805190602001908083835b60208310151561140657805182526020820191506020810190506020830392506113e1565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001908051906020019061145592919061952b565b5060208201518160010190805190602001906114729291906195ab565b50604082015181600201908051906020019061148f92919061960b565b5060608201518160030190805190602001906114ac92919061952b565b506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070190805190602001906114e7929190619695565b5061010082015181600801559050506114ff89616a05565b6040805190810160405280600781526020017f7375636365737300000000000000000000000000000000000000000000000000815250955050505050509392505050565b606061154e82616968565b151561158f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115869061a60b565b60405180910390fd5b6116d46001836040518082805190602001908083835b6020831015156115ca57805182526020820191506020810190506020830392506115a5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116945780601f1061166957610100808354040283529160200191611694565b820191906000526020600020905b81548152906001019060200180831161167757829003601f168201915b50505050506040805190810160405280600981526020017f636f6d6d69747465640000000000000000000000000000000000000000000000815250616a59565b15611714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170b9061a5ab565b60405180910390fd5b6118596001836040518082805190602001908083835b60208310151561174f578051825260208201915060208101905060208303925061172a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118195780601f106117ee57610100808354040283529160200191611819565b820191906000526020600020905b8154815290600101906020018083116117fc57829003601f168201915b50505050506040805190810160405280600a81526020017f726f6c6c65646261636b00000000000000000000000000000000000000000000815250616a59565b15611899576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118909061a68b565b60405180910390fd5b6103e8428115156118a657fe5b046001836040518082805190602001908083835b6020831015156118df57805182526020820191506020810190506020830392506118ba565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600501819055506040805190810160405280600981526020017f636f6d6d697474656400000000000000000000000000000000000000000000008152506001836040518082805190602001908083835b6020831015156119875780518252602082019150602081019050602083039250611962565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030190805190602001906119d09291906194ab565b506119da82616a74565b6040805190810160405280600781526020017f73756363657373000000000000000000000000000000000000000000000000008152509050919050565b6060611a2282616968565b1515611a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5a9061a60b565b60405180910390fd5b816001836040518082805190602001908083835b602083101515611a9c5780518252602082019150602081019050602083039250611a77565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000016001846040518082805190602001908083835b602083101515611b0a5780518252602082019150602081019050602083039250611ae5565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600301611b4985616c1a565b611bc06001876040518082805190602001908083835b602083101515611b845780518252602082019150602081019050602083039250611b5f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154616792565b611c376001886040518082805190602001908083835b602083101515611bfb5780518252602082019150602081019050602083039250611bd6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060050154616792565b611cae6001896040518082805190602001908083835b602083101515611c725780518252602082019150602081019050602083039250611c4d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060060154616792565b611de38960018b6040518082805190602001908083835b602083101515611cea5780518252602082019150602081019050602083039250611cc5565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600701805480602002602001604051908101604052809291908181526020018280548015611d6a57602002820191906000526020600020905b815481526020019060010190808311611d56575b505050505060018c6040518082805190602001908083835b602083101515611da75780518252602082019150602081019050602083039250611d82565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060080154617037565b60405160200180807f7b2278615472616e73616374696f6e4944223a2200000000000000000000000081525060140189805190602001908083835b602083101515611e435780518252602082019150602081019050602083039250611e1e565b6001836020036101000a038019825116818451168082178552505050505050905001807f222c000000000000000000000000000000000000000000000000000000000000815250600201807f226163636f756e744964656e74697479223a220000000000000000000000000081525060130188805460018160011615610100020316600290048015611f0c5780601f10611eea576101008083540402835291820191611f0c565b820191906000526020600020905b815481529060010190602001808311611ef8575b5050807f222c000000000000000000000000000000000000000000000000000000000000815250600201807f22737461747573223a2200000000000000000000000000000000000000000000815250600a0187805460018160011615610100020316600290048015611fb55780601f10611f93576101008083540402835291820191611f",
        "",
        "",
        "",
        "6001836040518082805190602001908083835b602083101515614fc85780518252602082019150602081019050602083039250614fa3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206007016001830381548110151561500e57fe5b9060005260206000200154615021565b60005b90508261502d82616792565b6040516020018083805190602001908083835b6020831015156150655780518252602082019150602081019050602083039250615040565b6001836020036101000a038019825116818451168082178552505050505050905001807f200000000000000000000000000000000000000000000000000000000000000081525060010182805190602001908083835b6020831015156150e057805182526020820191506020810190506020830392506150bb565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529450505050505b919050565b600681908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061515e9291906194ab565b505050565b60606007876040518082805190602001908083835b60208310151561519d5780518252602082019150602081019050602083039250615178565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900460ff16156152f4576007876040518082805190602001908083835b60208310151561521e57805182526020820191506020810190506020830392506151f9565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156152e85780601f106152bd576101008083540402835291602001916152e8565b820191906000526020600020905b8154815290600101906020018083116152cb57829003601f168201915b50505050509050615c73565b60006152ff856169e3565b905061530a87616968565b151561534b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016153429061a60b565b60405180910390fd5b6154906001886040518082805190602001908083835b6020831015156153865780518252602082019150602081019050602083039250615361565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156154505780601f1061542557610100808354040283529160200191615450565b820191906000526020600020905b81548152906001019060200180831161543357829003601f168201915b50505050506040805190810160405280600981526020017f636f6d6d69747465640000000000000000000000000000000000000000000000815250616a59565b156154d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016154c79061a5ab565b60405180910390fd5b6156156001886040518082805190602001908083835b60208310151561550b57805182526020820191506020810190506020830392506154e6565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156155d55780601f106155aa576101008083540402835291602001916155d5565b820191906000526020600020905b8154815290600101906020018083116155b857829003601f168201915b50505050506040805190810160405280600a81526020017f726f6c6c65646261636b00000000000000000000000000000000000000000000815250616a59565b15615655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161564c9061a68b565b60405180910390fd5b6157386000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561572d5780601f106157025761010080835404028352916020019161572d565b820191906000526020600020905b81548152906001019060200180831161571057829003601f168201915b505050505088616a59565b15156158475784876040516020018083805190602001908083835b6020831015156157785780518252602082019150602081019050602083039250615753565b6001836020036101000a0380198251168184511680821785525050505050509050018061a8896023913960230182805190602001908083835b6020831015156157d657805182526020820191506020810190506020830392506157b1565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161583e919061a4f1565b60405180910390fd5b615851878761826c565b1515615892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016158899061a62b565b60405180910390fd5b60c0604051908101604052806158a7326164e8565b81526020016103e8428115156158b957fe5b0481526020018681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481525060026158f78989617b92565b6040518082805190602001908083835b60208310151561592c5780518252602082019150602081019050602083039250615907565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001908051906020019061597b92919061952b565b506020820151816001015560408201518160020190805190602001906159a292919061952b565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190615a0692919061952b565b5060a0820151816005019080519060200190615a239291906196e2565b5090505060006001886040518082805190602001908083835b602083101515615a615780518252602082019150602081019050602083039250615a3c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600801549050866001896040518082805190602001908083835b602083101515615ad35780518252602082019150602081019050602083039250615aae565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070182815481101515615b1657fe5b9060005260206000200181905550600181016001896040518082805190602001908083835b602083101515615b605780518252602082019150602081019050602083039250615b3b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600801819055506060615ba7838787617fd4565b905060408051908101604052806001151581526020018281525060078b6040518082805190602001908083835b602083101515615bf95780518252602082019150602081019050602083039250615bd4565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001019080519060200190615c689291906196e2565b509050508093505050505b9695505050505050565b60606004546003541415615cc8576040805190810160405280600481526020017f6e756c6c000000000000000000000000000000000000000000000000000000008152509050615d7f565b6005600354815481101515615cd957fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615d775780601f10615d4c57610100808354040283529160200191615d77565b820191906000526020600020905b815481529060010190602001808311615d5a57829003601f168201915b505050505090505b90565b6060806004546003541415615dcf576040805190810160405280600281526020017f7b7d000000000000000000000000000000000000000000000000000000000000815250915050615e92565b6005600354815481101515615de057fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615e7e5780601f10615e5357610100808354040283529160200191615e7e565b820191906000526020600020905b815481529060010190602001808311615e6157829003601f168201915b50505050509050615e8e81611a17565b9150505b90565b6000600681615ea49190619762565b50565b6060808290506000815190506000809050600080905060006001840390505b6000811115615fb4577f2e000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168582815181101515615f2057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561",
        "5f9e57600181019150615fb4565b8280600101935050808060019003915050615ec6565b506060826040519080825280601f01601f191660200182016040528015615fea5781602001600182028038833980820191505090505b50905060008090505b838110156160a557858380600101945081518110151561600f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828281518110151561606857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050615ff3565b508095505050505050919050565b60006060600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663819a3d62856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161612e919061a4f1565b60006040518083038186803b15801561614657600080fd5b505afa15801561615a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506161839190810190619b2f565b9050606081905060008151905060006161d1836040805190810160405280600981526020017f227373657264646122000000000000000000000000000000000000000000000081525061837f565b9050600081141561622a57851561621d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016162149061a64b565b60405180910390fd5b60009450505050506164e2565b6060602a6040519080825280601f01601f1916602001820160405280156162605781602001600182028038833980820191505090505b509050600080905060008390505b84811015616419577f30000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191686828151811015156162c757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156163ff57507f78000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916866001830181518110151561639057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561640c57809150616419565b808060010191505061626e565b5060008090505b602a8110156164cf578581830181518110151561643957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838281518110151561649257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050616420565b506164d9826185b5565b96505050505050505b92915050565b60608060286040519080825280601f01601f19166020018201604052801561651f5781602001600182028038833980820191505090505b50905060008090505b60148110156166f45760008160130360080260020a8573ffffffffffffffffffffffffffffffffffffffff1681151561655d57fe5b047f010000000000000000000000000000000000000000000000000000000000000002905060006010827f0100000000000000000000000000000000000000000000000000000000000000900460ff168115156165b657fe5b047f01000000000000000000000000000000000000000000000000000000000000000290506000817f01000000000000000000000000000000000000000000000000000000000000009004601002837f01000000000000000000000000000000000000000000000000000000000000009004037f0100000000000000000000000000000000000000000000000000000000000000029050616656826189d0565b858560020281518110151561666757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506166a0816189d0565b85600186600202018151811015156166b457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505050508080600101915050616528565b508060405160200180807f307800000000000000000000000000000000000000000000000000000000000081525060020182805190602001908083835b6020831015156167565780518252602082019150602081019050602083039250616731565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052915050919050565b60606000808314156167dc576040805190810160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250915050616857565b5b600083111561684a5761010081600190048115156167f757fe5b0460010290507f01000000000000000000000000000000000000000000000000000000000000006030600a8581151561682c57fe5b06010260010281179050600a8381151561684257fe5b0492506167dd565b61685381618aa2565b9150505b919050565b606060008373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831015156168ad5780518252602082019150602081019050602083039250616888565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461690f576040519150601f19603f3d011682016040523d82523d6000602084013e616914565b606091505b50809350819250505080151561696157816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401616958919061a4f1565b60405180910390fd5b5092915050565b6000806001836040518082805190602001908083835b6020831015156169a3578051825260208201915060208101905060208303925061697e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206004015414159050919050565b600060606169f083615ea7565b90506169fd8160016160b3565b915050919050565b6004600081548092919060010191905055506005819080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190616a549291906194ab565b505050565b60008180519060200120838051906020012014905092915050565b60006001826040518082805190602001908083835b602083101515616aae5780518252602082019150602081019050602083039250616a89565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020180549050905060008090505b81811015616c155760006001846040518082805190602001908083835b602083101515616b325780518252602082019150602081019050602083039250616b0d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020182815481101515616b7557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff0219169055600182016000616c05919061978e565b5050508080600101915050616af0565b505050565b606060006001836040518082805190602001908083835b602083101515616c565780518252602082019150602081019050602083039250616c31565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010180549050905060606001846040518082805190602001908083835b602083101515616ccc5780518252602082019150602081019050602083039250616ca7565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001016000815481101515616d1057fe5b9060005260206000200160405160200180807f5b2200000000000000000000000000000000000000000000000000000000000081525060020182805460018160011615610100020316600290048015616da05780601f10616d7e576101008083540402835291820191616da0565b820191906000526020600020905b815481529060010190602001808311616d8c575b5050807f220000000000000000000000000000000000000000000000000000000000000081525060010191505060405160208183030381529060405290506000600190505b82811015616f9857816001866040518082805190602001908083835b602083101515616e265780518252602082019150602081019050602083039250616e01565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010182815481101515616e6957fe5b906000526020600020016040516020018083805190602001908083835b602083101515616eab5780518252602082019150602081019050602083039250616e86565b6001836020036101000a038019825116818451168082178552505050505050905001807f2c2200000000000000000000000000000000000000000000000000000000000081525060020182805460018160011615610100020316600290048015616f4c5780601f10616f2a576101008083540402835291820191616f4c565b820191906000526020600020905b815481529060010190602001808311616f38575b5050807f22000000000000000000000000000000000000000000000000000000000000008152506001019250505060405160208183030381529060405291508080600101",
        "",
        "",
        "",
        "013567ffffffffffffffff811115619fa757600080fd5b619fb3878288016199c4565b91505092959194509250565b60008060008060008060c08789031215619fd857600080fd5b600087013567ffffffffffffffff811115619ff257600080fd5b619ffe89828a016199c4565b965050602087013567ffffffffffffffff81111561a01b57600080fd5b61a02789828a016199c4565b955050604061a03889828a01619a70565b945050606087013567ffffffffffffffff81111561a05557600080fd5b61a06189828a016199c4565b935050608087013567ffffffffffffffff81111561a07e57600080fd5b61a08a89828a016199c4565b92505060a087013567ffffffffffffffff81111561a0a757600080fd5b61a0b389828a01619904565b9150509295509295509295565b6000806040838503121561a0d357600080fd5b600083013567ffffffffffffffff81111561a0ed57600080fd5b61a0f9858286016199c4565b925050602061a10a85828601619a70565b9150509250929050565b61a11d8161a7e5565b82525050565b600061a12e8261a7ac565b8084526020840193508360208202850161a1478561a79f565b60005b8481101561a18057838303885261a16283835161a1fd565b925061a16d8261a7d8565b915060208801975060018101905061a14a565b508196508694505050505092915050565b600061a19c8261a7b7565b80845261a1b081602086016020860161a844565b61a1b98161a877565b602085010191505092915050565b600061a1d28261a7cd565b80845261a1e681602086016020860161a844565b61a1ef8161a877565b602085010191505092915050565b600061a2088261a7c2565b80845261a21c81602086016020860161a844565b61a2258161a877565b602085010191505092915050565b6000602182527f7861207472616e73616374696f6e20686173206265656e20636f6d6d6974746560208301527f64000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602182527f64656c657465206e6f6e6578697374656e74207861207472616e73616374696f60208301527f6e000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601682527f6465706c6f7920636f6e7472616374206661696c6564000000000000000000006020830152604082019050919050565b6000601882527f7861207472616e73616374696f6e206e6f7420666f756e6400000000000000006020830152604082019050919050565b6000602182527f7365712073686f756c642062652067726561746572207468616e206265666f7260208301527f65000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601d82527f746865206e616d6527732061646472657373206e6f742065786973742e0000006020830152604082019050919050565b6000601f82527f64656c65746520756e6d617463686564207861207472616e73616374696f6e006020830152604082019050919050565b6000602282527f7861207472616e73616374696f6e20686173206265656e20726f6c6c6564626160208301527f636b0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b61a48c8161a817565b82525050565b600060208201905061a4a7600083018461a114565b92915050565b6000602082019050818103600083015261a4c7818461a123565b905092915050565b6000602082019050818103600083015261a4e9818461a191565b905092915050565b6000602082019050818103600083015261a50b818461a1c7565b905092915050565b6000604082019050818103600083015261a52d818561a1c7565b9050818103602083015261a541818461a1c7565b90509392505050565b6000608082019050818103600083015261a564818761a1c7565b9050818103602083015261a578818661a1c7565b9050818103604083015261a58c818561a1c7565b9050818103606083015261a5a0818461a1c7565b905095945050505050565b6000602082019050818103600083015261a5c48161a233565b9050919050565b6000602082019050818103600083015261a5e48161a290565b9050919050565b6000602082019050818103600083015261a6048161a2ed565b9050919050565b6000602082019050818103600083015261a6248161a324565b9050919050565b6000602082019050818103600083015261a6448161a35b565b9050919050565b6000602082019050818103600083015261a6648161a3b8565b9050919050565b6000602082019050818103600083015261a6848161a3ef565b9050919050565b6000602082019050818103600083015261a6a48161a426565b9050919050565b600060208201905061a6c0600083018461a483565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561a6e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561a70a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561a73257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a75e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a78a57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600061a7f08261a7f7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561a86257808201518184015260208101905061a847565b8381111561a871576000848401525b50505050565b6000601f19601f830116905091905056fe20697320756e7265676973746572656420696e207861207472616e73616374696f6e20206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a207265736f75726365206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a2020697320756e7265676973746572656420696e207861207472616e73616374696f6e3a20a265627a7a72305820a46c1c333b9080f333d3d89d6009a032b08ce83630856a839e953c1aa71938ef6c6578706572696d656e74616cf50037"
    };

    public static final String BINARY =
            org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "0000900460ff16811515616fa057fe5b047f01000000000000000000000000000000000000000000000000000000000000000290506000817f01000000000000000000000000000000000000000000000000000000000000009004601002837f01000000000000000000000000000000000000000000000000000000000000009004037f010000000000000000000000000000000000000000000000000000000000000002905061704082618aab565b858560020281518110151561705157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061708a81618aab565b856001866002020181518110151561709e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505050508080600101915050616f12565b508060405160200180807f307800000000000000000000000000000000000000000000000000000000000081525060020182805190602001908083835b602083101515617140578051825260208201915060208101905060208303925061711b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052915050919050565b6000606061718983616cc6565b9050617196816001616107565b915050919050565b60608083604051602401604051602081830303815290604052906040518082805190602001908083835b6020831015156171ed57805182526020820191506020810190506020830392506171c8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008573ffffffffffffffffffffffffffffffffffffffff1682856040516020018083805190602001908083835b6020831015156172bc5780518252602082019150602081019050602083039250617297565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310151561730f57805182526020820191506020810190506020830392506172ea565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156173795780518252602082019150602081019050602083039250617354565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146173db576040519150601f19603f3d011682016040523d82523d6000602084013e6173e0565b606091505b50809450819250505080151561742d57826040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401617424919061a4f1565b60405180910390fd5b50509392505050565b6000806001846040518082805190602001908083835b602083101515617471578051825260208201915060208101905060208303925061744c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600801549050600081148061754057506001846040518082805190602001908083835b6020831015156174ec57805182526020820191506020810190506020830392506174c7565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206007016001820381548110151561753257fe5b906000526020600020015483115b91505092915050565b600460008154809291906001019190505550600581908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061759892919061952b565b505050565b606060006001836040518082805190602001908083835b6020831015156175d957805182526020820191506020810190506020830392506175b4565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010180549050905060606001846040518082805190602001908083835b60208310151561764f578051825260208201915060208101905060208303925061762a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101600081548110151561769357fe5b9060005260206000200160405160200180807f5b22000000000000000000000000000000000000000000000000000000000000815250600201828054600181600116156101000203166002900480156177235780601f10617701576101008083540402835291820191617723565b820191906000526020600020905b81548152906001019060200180831161770f575b5050807f220000000000000000000000000000000000000000000000000000000000000081525060010191505060405160208183030381529060405290506000600190505b8281101561791b57816001866040518082805190602001908083835b6020831015156177a95780518252602082019150602081019050602083039250617784565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101828154811015156177ec57fe5b906000526020600020016040516020018083805190602001908083835b60208310151561782e5780518252602082019150602081019050602083039250617809565b6001836020036101000a038019825116818451168082178552505050505050905001807f2c22000000000000000000000000000000000000000000000000000000000000815250600201828054600181600116156101000203166002900480156178cf5780601f106178ad5761010080835404028352918201916178cf565b820191906000526020600020905b8154815290600101906020018083116178bb575b5050807f22000000000000000000000000000000000000000000000000000000000000008152506001019250505060405160208183030381529060405291508080600101915050617768565b50806040516020018082805190602001908083835b6020831015156179555780518252602082019150602081019050602083039250617930565b6001836020036101000a038019825116818451168082178552505050505050905001807f5d0000000000000000000000000000000000000000000000000000000000000081525060010191505060405160208183030381529060405292505050919050565b60606000821415617a02576040805190810160405280600281526020017f5b5d0000000000000000000000000000000000000000000000000000000000008152509050618378565b617da36002617a2986866000815181101515617a1a57fe5b90602001906020020151616884565b6040518082805190602001908083835b602083101515617a5e5780518252602082019150602081019050602083039250617a39565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060c06040519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015617b365780601f10617b0b57610100808354040283529160200191617b36565b820191906000526020600020905b815481529060010190602001808311617b1957829003601f168201915b5050505050815260200160018201548152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015617be25780601f10617bb757610100808354040283529160200191617be2565b820191906000526020600020905b815481529060010190602001808311617bc557829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015617cda5780601f10617caf57610100808354040283529160200191617cda565b820191906000526020600020905b815481529060010190602001808311617cbd57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015617d7c5780601f10617d5157610100808354040283529160200191617d7c565b820191906000526020600020905b815481529060010190602001808311617d5f57829003601f168201915b505050505081525050846000815181101515617d9457fe5b90602001906020020151618b7d565b60405160200180807f5b0000000000000000000000000000000000000000000000000000000000000081525060010182805190602001908083835b602083101515617e035780518252602082019150602081019050602083039250617dde565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405290506000600190505b828110156182df57816181e86002617e6f888886815181101515617e6057fe5b90602001906020020151616884565b6040518082805190602001908083835b602083101515617ea45780518252602082019150602081019050602083039250617e7f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060c06040519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015617f7c5780601f10617f5157610100808354040283529160200191617f7c565b820191906000526020600020905b815481529060010190602001808311617f5f57829003601f168201915b5050505050815260200160018201548152602001",
        "",
        "",
        "013567ffffffffffffffff811115619fa757600080fd5b619fb3878288016199c4565b91505092959194509250565b60008060008060008060c08789031215619fd857600080fd5b600087013567ffffffffffffffff811115619ff257600080fd5b619ffe89828a016199c4565b965050602087013567ffffffffffffffff81111561a01b57600080fd5b61a02789828a016199c4565b955050604061a03889828a01619a70565b945050606087013567ffffffffffffffff81111561a05557600080fd5b61a06189828a016199c4565b935050608087013567ffffffffffffffff81111561a07e57600080fd5b61a08a89828a016199c4565b92505060a087013567ffffffffffffffff81111561a0a757600080fd5b61a0b389828a01619904565b9150509295509295509295565b6000806040838503121561a0d357600080fd5b600083013567ffffffffffffffff81111561a0ed57600080fd5b61a0f9858286016199c4565b925050602061a10a85828601619a70565b9150509250929050565b61a11d8161a7e5565b82525050565b600061a12e8261a7ac565b8084526020840193508360208202850161a1478561a79f565b60005b8481101561a18057838303885261a16283835161a1fd565b925061a16d8261a7d8565b915060208801975060018101905061a14a565b508196508694505050505092915050565b600061a19c8261a7b7565b80845261a1b081602086016020860161a844565b61a1b98161a877565b602085010191505092915050565b600061a1d28261a7cd565b80845261a1e681602086016020860161a844565b61a1ef8161a877565b602085010191505092915050565b600061a2088261a7c2565b80845261a21c81602086016020860161a844565b61a2258161a877565b602085010191505092915050565b6000601882527f7861207472616e73616374696f6e206e6f7420666f756e6400000000000000006020830152604082019050919050565b6000601d82527f746865206e616d6527732061646472657373206e6f742065786973742e0000006020830152604082019050919050565b6000602182527f64656c657465206e6f6e6578697374656e74207861207472616e73616374696f60208301527f6e000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602182527f7861207472616e73616374696f6e20686173206265656e20636f6d6d6974746560208301527f64000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602282527f7861207472616e73616374696f6e20686173206265656e20726f6c6c6564626160208301527f636b0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601682527f6465706c6f7920636f6e7472616374206661696c6564000000000000000000006020830152604082019050919050565b6000602182527f7365712073686f756c642062652067726561746572207468616e206265666f7260208301527f65000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601f82527f64656c65746520756e6d617463686564207861207472616e73616374696f6e006020830152604082019050919050565b61a48c8161a817565b82525050565b600060208201905061a4a7600083018461a114565b92915050565b6000602082019050818103600083015261a4c7818461a123565b905092915050565b6000602082019050818103600083015261a4e9818461a191565b905092915050565b6000602082019050818103600083015261a50b818461a1c7565b905092915050565b6000604082019050818103600083015261a52d818561a1c7565b9050818103602083015261a541818461a1c7565b90509392505050565b6000608082019050818103600083015261a564818761a1c7565b9050818103602083015261a578818661a1c7565b9050818103604083015261a58c818561a1c7565b9050818103606083015261a5a0818461a1c7565b905095945050505050565b6000602082019050818103600083015261a5c48161a233565b9050919050565b6000602082019050818103600083015261a5e48161a26a565b9050919050565b6000602082019050818103600083015261a6048161a2a1565b9050919050565b6000602082019050818103600083015261a6248161a2fe565b9050919050565b6000602082019050818103600083015261a6448161a35b565b9050919050565b6000602082019050818103600083015261a6648161a3b8565b9050919050565b6000602082019050818103600083015261a6848161a3ef565b9050919050565b6000602082019050818103600083015261a6a48161a44c565b9050919050565b600060208201905061a6c0600083018461a483565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561a6e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561a70a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561a73257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a75e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a78a57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600061a7f08261a7f7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561a86257808201518184015260208101905061a847565b8381111561a871576000848401525b50505050565b6000601f19601f830116905091905056fe7265736f75726365206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a20206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a2020697320756e7265676973746572656420696e207861207472616e73616374696f6e2020697320756e7265676973746572656420696e207861207472616e73616374696f6e3a20a265627a7a723058205a5b288d01022d7578bc3fea31dd1becef17a898c7c71d99c4961bfafd27dc456c6578706572696d656e74616cf50037"
    };

    public static final String SM_BINARY =
            org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {
        "[{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_bin\",\"type\":\"bytes\"},{\"name\":\"_abi\",\"type\":\"string\"}],\"name\":\"deployContractWithRegisterCNS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_argsWithMethodId\",\"type\":\"bytes\"}],\"name\":\"constantCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPaths\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"},{\"name\":\"_selfPaths\",\"type\":\"string[]\"},{\"name\":\"_otherPaths\",\"type\":\"string[]\"}],\"name\":\"startXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"commitXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"getXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getXATransactionNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"rollbackAndDeleteXATransactionTask\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"string\"},{\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"listXATransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_addr\",\"type\":\"string\"},{\"name\":\"_abi\",\"type\":\"string\"}],\"name\":\"registerCNS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"rollbackXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bin\",\"type\":\"bytes\"}],\"name\":\"deployContract\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"selectByName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"selectByNameAndVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_argsWithMethodId\",\"type\":\"bytes\"}],\"name\":\"sendTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"stringToUint256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_XATransactionID\",\"type\":\"string\"},{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_func\",\"type\":\"string\"},{\"name\":\"_args\",\"type\":\"bytes\"}],\"name\":\"constantCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"}],\"name\":\"getXATransactionState\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"}],\"name\":\"addPath\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"string\"},{\"name\":\"_XATransactionID\",\"type\":\"string\"},{\"name\":\"_XATransactionSeq\",\"type\":\"uint256\"},{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_func\",\"type\":\"string\"},{\"name\":\"_args\",\"type\":\"bytes\"}],\"name\":\"sendTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestXATransactionID\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deletePathList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"
    };

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_DEPLOYCONTRACTWITHREGISTERCNS = "deployContractWithRegisterCNS";

    public static final String FUNC_GETVERSION = "getVersion";

    public static final String FUNC_CONSTANTCALL = "constantCall";

    public static final String FUNC_GETPATHS = "getPaths";

    public static final String FUNC_STARTXATRANSACTION = "startXATransaction";

    public static final String FUNC_COMMITXATRANSACTION = "commitXATransaction";

    public static final String FUNC_GETXATRANSACTION = "getXATransaction";

    public static final String FUNC_GETXATRANSACTIONNUMBER = "getXATransactionNumber";

    public static final String FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK =
            "rollbackAndDeleteXATransactionTask";

    public static final String FUNC_LISTXATRANSACTIONS = "listXATransactions";

    public static final String FUNC_REGISTERCNS = "registerCNS";

    public static final String FUNC_ROLLBACKXATRANSACTION = "rollbackXATransaction";

    public static final String FUNC_DEPLOYCONTRACT = "deployContract";

    public static final String FUNC_SELECTBYNAME = "selectByName";

    public static final String FUNC_SELECTBYNAMEANDVERSION = "selectByNameAndVersion";

    public static final String FUNC_SENDTRANSACTION = "sendTransaction";

    public static final String FUNC_STRINGTOUINT256 = "stringToUint256";

    public static final String FUNC_GETXATRANSACTIONSTATE = "getXATransactionState";

    public static final String FUNC_ADDPATH = "addPath";

    public static final String FUNC_GETLATESTXATRANSACTIONID = "getLatestXATransactionID";

    public static final String FUNC_GETLATESTXATRANSACTION = "getLatestXATransaction";

    public static final String FUNC_DELETEPATHLIST = "deletePathList";

    protected WeCrossProxy(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt deployContractWithRegisterCNS(
            String _path, String _version, byte[] _bin, String _abi) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deployContractWithRegisterCNS(
            String _path, String _version, byte[] _bin, String _abi, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeployContractWithRegisterCNS(
            String _path, String _version, byte[] _bin, String _abi) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, byte[], String> getDeployContractWithRegisterCNSInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {},
                                new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, byte[], String>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (byte[]) results.get(2).getValue(),
                (String) results.get(3).getValue());
    }

    public Tuple1<String> getDeployContractWithRegisterCNSOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String getVersion() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETVERSION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt constantCall(String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] constantCall(
            String _name, byte[] _argsWithMethodId, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForConstantCall(String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, byte[]> getConstantCallStringBytesInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, byte[]>(
                (String) results.get(0).getValue(), (byte[]) results.get(1).getValue());
    }

    public Tuple1<byte[]> getConstantCallStringBytesOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public List getPaths() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETPATHS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public TransactionReceipt startXATransaction(
            String _xaTransactionID, List<String> _selfPaths, List<String> _otherPaths) {
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID),
                                _selfPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _selfPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class)),
                                _otherPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _otherPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class))),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] startXATransaction(
            String _xaTransactionID,
            List<String> _selfPaths,
            List<String> _otherPaths,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID),
                                _selfPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _selfPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class)),
                                _otherPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _otherPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class))),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForStartXATransaction(
            String _xaTransactionID, List<String> _selfPaths, List<String> _otherPaths) {
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID),
                                _selfPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _selfPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class)),
                                _otherPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _otherPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class))),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, List<String>, List<String>> getStartXATransactionInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, List<String>, List<String>>(
                (String) results.get(0).getValue(),
                convertToNative((List<Utf8String>) results.get(1).getValue()),
                convertToNative((List<Utf8String>) results.get(2).getValue()));
    }

    public Tuple1<String> getStartXATransactionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public TransactionReceipt commitXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] commitXATransaction(String _xaTransactionID, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCommitXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCommitXATransactionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public Tuple1<String> getCommitXATransactionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String getXATransaction(String _xaTransactionID) throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getXATransactionNumber() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETXATRANSACTIONNUMBER,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt rollbackAndDeleteXATransactionTask(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] rollbackAndDeleteXATransactionTask(
            String _xaTransactionID, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRollbackAndDeleteXATransactionTask(
            String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRollbackAndDeleteXATransactionTaskInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public Tuple1<String> getRollbackAndDeleteXATransactionTaskOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String listXATransactions(String _index, BigInteger _size) throws ContractException {
        final Function function =
                new Function(
                        FUNC_LISTXATRANSACTIONS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_index),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_size)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt registerCNS(
            String _path, String _version, String _addr, String _abi) {
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_addr),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] registerCNS(
            String _path,
            String _version,
            String _addr,
            String _abi,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_addr),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRegisterCNS(
            String _path, String _version, String _addr, String _abi) {
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_addr),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, String> getRegisterCNSInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, String>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (String) results.get(3).getValue());
    }

    public TransactionReceipt rollbackXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] rollbackXATransaction(String _xaTransactionID, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRollbackXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRollbackXATransactionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public Tuple1<String> getRollbackXATransactionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public TransactionReceipt deployContract(byte[] _bin) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deployContract(byte[] _bin, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeployContract(byte[] _bin) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<byte[]> getDeployContractInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public Tuple1<String> getDeployContractOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String selectByName(String _name) throws ContractException {
        final Function function =
                new Function(
                        FUNC_SELECTBYNAME,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String selectByNameAndVersion(String _name, String _version) throws ContractException {
        final Function function =
                new Function(
                        FUNC_SELECTBYNAMEANDVERSION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt sendTransaction(String _uid, String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] sendTransaction(
            String _uid, String _name, byte[] _argsWithMethodId, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSendTransaction(
            String _uid, String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, byte[]> getSendTransactionStringStringBytesInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, byte[]>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (byte[]) results.get(2).getValue());
    }

    public Tuple1<byte[]> getSendTransactionStringStringBytesOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public BigInteger stringToUint256(String _str) throws ContractException {
        final Function function =
                new Function(
                        FUNC_STRINGTOUINT256,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_str)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public TransactionReceipt constantCall(
            String _XATransactionID, String _path, String _func, byte[] _args) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] constantCall(
            String _XATransactionID,
            String _path,
            String _func,
            byte[] _args,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForConstantCall(
            String _XATransactionID, String _path, String _func, byte[] _args) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, byte[]> getConstantCallStringStringStringBytesInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, byte[]>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (byte[]) results.get(3).getValue());
    }

    public Tuple1<byte[]> getConstantCallStringStringStringBytesOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public String getXATransactionState(String _path) throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETXATRANSACTIONSTATE,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt addPath(String _path) {
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addPath(String _path, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddPath(String _path) {
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getAddPathInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public TransactionReceipt sendTransaction(
            String _uid,
            String _XATransactionID,
            BigInteger _XATransactionSeq,
            String _path,
            String _func,
            byte[] _args) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(
                                        _XATransactionSeq),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] sendTransaction(
            String _uid,
            String _XATransactionID,
            BigInteger _XATransactionSeq,
            String _path,
            String _func,
            byte[] _args,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(
                                        _XATransactionSeq),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSendTransaction(
            String _uid,
            String _XATransactionID,
            BigInteger _XATransactionSeq,
            String _path,
            String _func,
            byte[] _args) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(
                                        _XATransactionSeq),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple6<String, String, BigInteger, String, String, byte[]>
            getSendTransactionStringStringUint256StringStringBytesInput(
                    TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Uint256>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple6<String, String, BigInteger, String, String, byte[]>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (BigInteger) results.get(2).getValue(),
                (String) results.get(3).getValue(),
                (String) results.get(4).getValue(),
                (byte[]) results.get(5).getValue());
    }

    public Tuple1<byte[]> getSendTransactionStringStringUint256StringStringBytesOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public String getLatestXATransactionID() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETLATESTXATRANSACTIONID,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getLatestXATransaction() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETLATESTXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt deletePathList() {
        final Function function =
                new Function(
                        FUNC_DELETEPATHLIST,
                        Arrays.<Type>asList(),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deletePathList(TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_DELETEPATHLIST,
                        Arrays.<Type>asList(),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeletePathList() {
        final Function function =
                new Function(
                        FUNC_DELETEPATHLIST,
                        Arrays.<Type>asList(),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public static WeCrossProxy load(
            String contractAddress, Client client, CryptoKeyPair credential) {
        return new WeCrossProxy(contractAddress, client, credential);
    }

    public static WeCrossProxy deploy(Client client, CryptoKeyPair credential)
            throws ContractException {
        return deploy(
                WeCrossProxy.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }
}
